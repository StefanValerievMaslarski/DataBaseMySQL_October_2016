SECTION 1 Data definition 
use ams;

CREATE TABLE flights(
	flight_id INT PRIMARY KEY,
	departure_time DATETIME NOT NULL,
	arrival_time DATETIME NOT NULL,
	`status` VARCHAR(9), 
	origin_airport_id INT,
	destination_airport_id INT,
	airline_id INT
);


ALTER TABLE flights
ADD CONSTRAINT fk_flights_airports_1 FOREIGN KEY(origin_airport_id)
REFERENCES airports(airport_id);


ALTER TABLE flights	
ADD CONSTRAINT fk_flights_airports_2 FOREIGN KEY(destination_airport_id)
REFERENCES airports(airport_id);

ALTER TABLE flights
ADD CONSTRAINT fk_flights_airlines FOREIGN KEY(airline_id)
REFERENCES airlines(airline_id);



CREATE TABLE tickets(
	ticket_id INT PRIMARY KEY,
	price DECIMAL(8,2) NOT NULL,
	class VARCHAR(6),
	seat VARCHAR(5),
	customer_id INT,
	flight_id INT, 
	CONSTRAINT fk_tickets_customers FOREIGN KEY(customer_id)
	REFERENCES customers(customer_id),
	CONSTRAINT fk_tickets_flights FOREIGN KEY(flight_id)
	REFERENCES flights(flight_id)
);
--------------------------------------------------------------
SECTION 2 Task 1 Data Insertion

INSERT INTO flights(flight_id, departure_time, arrival_time, status,	origin_airport_id, destination_airport_id, airline_id)
VALUES (1, '2016-10-13 06:00',	'2016-10-13 10:00',	'Delayed',	1,	4,	1),
(2,	'2016-10-12 12:00', 	'2016-10-12 12:01', 	'Departing',	1,	3,	2),
(3,	'2016-10-14 15:00', 	'2016-10-20 16:00', 	'Delayed',	   4,	2,	4),
(4,	'2016-10-12 13:24', 	'2016-10-12 16:31', 	'Departing',	3,	1,	3),
(5,	'2016-10-12 08:11', 	'2016-10-12 23:22', 	'Departing',	4,	1,	1),
(6,	'1995-06-21 12:30', 	'1995-06-22 20:30', 	'Arrived',	   2,	3,	5),
(7,	'2016-10-12 23:34', 	'2016-10-13 03:00', 	'Departing',	2,	4,	2),
(8,	'2016-11-11 13:00', 	'2016-11-12 22:00', 	'Delayed',	   4,	3,	1),
(9,	'2015-10-01 12:00', 	'2015-12-01 01:00', 	'Arrived',	   1,	2,	1),
(10,  '2016-10-12 19:30', 	'2016-10-13 12:30',	'Departing',	2,	1,	7);

INSERT INTO tickets (ticket_id,	price,	class,	seat,	customer_id,	flight_id)
VALUES (1,	3000.00,	'First',	 '233-A', 3,	8),
 (2,	1799.90,	'Second', '123-D', 1,	1),
 (3,	1200.50,	'Second', '12-Z',	 2,	5),
 (4,	410.68,	'Third',	 '45-Q',	 2,	8),
 (5,	560.00,	'Third',	 '201-R', 4,	6),
 (6,	2100.00,	'Second', '13-T',	 1,	9),
 (7,	5500.00,	'First',	 '98-O',	 2,	7);
 
----------------------------------------------------------------------------------
SECTION 2 Task 2

UPDATE flights AS f
SET f.airline_id = 1
WHERE f.`status`= 'arrived';
----------------------------------
SECTION 2 Task 3
UPDATE tickets AS t
SET t.price = t.price + 0.5 * t.price
WHERE ticket_id IN (SELECT t.ticket_id FROM tickets AS t
                      JOIN flights AS f 
                      ON  t.flight_id = f.flight_id
                      JOIN airlines AS a
                      ON a.airline_id = f.airline_id
                      WHERE a.rating = ( 
                      SELECT MAX(a.rating)
                      FROM airlines AS a))
					  
hand update					  
UPDATE tickets AS t
SET t.price = t.price + 0.5*t.price
WHERE t.ticket_id IN (1, 2, 3, 4, 5, 6);
--------------------------------------------------------------------------
SECTION 2 Task 4

 
CREATE TABLE customer_reviews(
review_id INT PRIMARY KEY,
review_content VARCHAR(255) NOT NULL,
review_grade INT,
airline_id INT,
customer_id INT,
CONSTRAINT fk_customer_reviews_airlines FOREIGN KEY(airline_id)
REFERENCES airlines(airline_id), 
CONSTRAINT fk_customer_reviews_customers FOREIGN KEY(customer_id)
REFERENCES customers(customer_id)
);

CREATE TABLE customer_bank_accounts(
account_id INT PRIMARY KEY,
account_number VARCHAR(10) UNIQUE NOT NULL,
balance DECIMAL(10,2) NOT NULL,
customer_id INT,
CONSTRAINT fk_customer_bank_accounts_customers FOREIGN KEY(customer_id)
REFERENCES customers(customer_id)
);

----------------------------------------
SECTION 2 Task 5

INSERT INTO customer_reviews (review_id, review_content, review_grade, airline_id, customer_id)
VALUES
(1,	'Me is very happy. Me likey this airline. Me good.',	10,	1,	1), 
(2,	'Ja, Ja, Ja... Ja, Gut, Gut, Ja Gut! Sehr Gut!',	10,	1,	4),
(3,	'Meh...',	5,	4,	3),
(4,	'Well Ive seen better, but Ive certainly seen a lot worse...',	7,	3,	5);



INSERT INTO customer_bank_accounts (account_id, account_number, balance, customer_id)
VALUES (1,	'123456790',	2569.23,	1),
(2,	'18ABC23672',	14004568.23,	2),
(3,	'F0RG0100N3',	19345.20,	5);




------------------------------------------
Querying
SECTION 3 Task 1
SELECT t.ticket_id, t.price, t.class, t.seat 
FROM tickets AS t
ORDER BY t.ticket_id
-----------------------------------
SECTION 3 Task 2
SELECT c.customer_id, CONCAT(c.first_name,' ', c.last_name) AS full_name, c.gender
 FROM customers AS c
 ORDER BY full_name, c.customer_id
 ---------------------------------------
 SECTION 3 Task 3
  SELECT f.flight_id, f.departure_time, f.arrival_time
  FROM flights AS f
 WHERE f.`status`= 'delayed'
 ORDER BY flight_id
 ---------------------------------------
 SECTION 3 Task 4 
SELECT  a.airline_id, a.airline_name, 
a.nationality, a.rating
  FROM airlines AS a
LEFT JOIN flights AS f
ON a.airline_id = f.airline_id
WHERE f.flight_id IS NOT NULL
AND a.airline_id IN (SELECT a.airline_id FROM 
                     airlines AS a
                     LEFT JOIN flights AS f
                     ON f.airline_id = a.airline_id
                     WHERE f.flight_id IS NOT NULL)
ORDER BY a.rating DESC
LIMIT 5
------------------------------------------
SECTION 3 Task 5
SELECT t.ticket_id, a.airport_name, CONCAT(cu.first_name, ' ', cu.last_name) AS customer_name
  FROM tickets AS t
JOIN flights AS f
ON f.flight_id = t.flight_id
JOIN airports AS a
ON f.destination_airport_id = a.airport_id
JOIN customers AS cu
ON cu.customer_id = t.customer_id
WHERE t.price < 5000
AND t.class = 'first'
 -------------------------------------------
 SECTION 3 Task 6
SELECT t.ticket_id, a.airport_name, CONCAT(cu.first_name, ' ', cu.last_name) AS customer_name
  FROM tickets AS t
JOIN flights AS f
ON f.flight_id = t.flight_id
JOIN airports AS a
ON f.destination_airport_id = a.airport_id
JOIN customers AS cu
ON cu.customer_id = t.customer_id
---------------------------------------------
SECTION 3 Task 7 - 100 % ok
SELECT cu.customer_id, CONCAT(cu.first_name, ' ', cu.last_name) AS full_name,
FLOOR(DATEDIFF(NOW(), cu.date_of_birth)/365) AS age 
FROM tickets AS t
JOIN customers AS cu
ON cu.customer_id = t.customer_id
JOIN flights AS f
ON f.flight_id = t.flight_id 
WHERE f.`status` = 'departing'
ORDER BY age, cu.customer_id -- (FLOOR(DATEDIFF(NOW(), cu.date_of_birth)/365)
-------------------------------------------------
SECTION 3 Task 8 - 100 % ok
SELECT cu.customer_id, CONCAT(cu.first_name, ' ', cu.last_name) AS full_name,
t.price, a.airport_name AS destination
  FROM tickets AS t
JOIN customers  AS cu
ON t.customer_id = cu.customer_id
JOIN flights AS f
ON f.flight_id = t.flight_id
JOIN airports AS a
ON f.destination_airport_id = a.airport_id
WHERE f.`status` = 'delayed'
ORDER BY t.price DESC
LIMIT 3
-------------------------------------------

